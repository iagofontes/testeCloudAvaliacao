{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/cadastro/cadastro-prova.component.html","webpack:///./src/app/components/cadastro/cadastro-provas.component.ts","webpack:///./src/app/components/home/dialog-component.html","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/listagem-prova/listagem-prova.component.css","webpack:///./src/app/components/listagem-prova/listagem-prova.component.html","webpack:///./src/app/components/listagem-prova/listagem-prova.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/prova/mensagem.component.html","webpack:///./src/app/components/prova/prova.component.html","webpack:///./src/app/components/prova/prova.component.ts","webpack:///./src/app/components/ranking/ranking.component.html","webpack:///./src/app/components/ranking/ranking.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/services/prova.service.ts","webpack:///./src/app/services/ranking.service.ts","webpack:///./src/app/services/usuario.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ProvaComponent } from './components/prova/prova.component';\nimport { CadastroProvaComponent } from './components/cadastro/cadastro-provas.component';\nimport { ListagemProvaComponent } from './components/listagem-prova/listagem-prova.component';\nimport { RankingComponent } from './components/ranking/ranking.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'prova/:id', component: ProvaComponent },\n  { path: 'provas', component: ListagemProvaComponent },\n  { path: 'manutencaoprova', component: CadastroProvaComponent },\n  { path: 'manutencaoprova/:id', component: CadastroProvaComponent },\n  { path: 'ranking', component: RankingComponent },\n  { path: '**', component: HomeComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","module.exports = \".example-container {\\n    display: flex;\\n    flex-direction: column;\\n    position: absolute;\\n    top: 0;\\n    bottom: 0;\\n    left: 0;\\n    right: 0;\\n  }\\n  \\n  .example-is-mobile .example-toolbar {\\n    position: fixed;\\n    /* Make sure the toolbar will stay on top of the content as it scrolls past. */\\n    z-index: 2;\\n  }\\n  \\n  h1.example-app-name {\\n    margin-left: 8px;\\n  }\\n  \\n  .example-sidenav-container {\\n    /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This\\n       causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */\\n    flex: 1;\\n  }\\n  \\n  .example-is-mobile .example-sidenav-container {\\n    /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the\\n       `<body>` to be our scrolling element for mobile layouts. */\\n    flex: 1 0 auto;\\n  }\\n  \\n  .menu-item {\\n    width: 100em;\\n    padding-left: 3em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixPQUFPO0lBQ1AsVUFBVTtJQUNWLFFBQVE7SUFDUixTQUFTO0dBQ1Y7O0VBRUQ7SUFDRSxnQkFBZ0I7SUFDaEIsK0VBQStFO0lBQy9FLFdBQVc7R0FDWjs7RUFFRDtJQUNFLGlCQUFpQjtHQUNsQjs7RUFFRDtJQUNFOzZGQUN5RjtJQUN6RixRQUFRO0dBQ1Q7O0VBRUQ7SUFDRTtrRUFDOEQ7SUFDOUQsZUFBZTtHQUNoQjs7RUFFRDtJQUNFLGFBQWE7SUFDYixrQkFBa0I7Q0FDckIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgcmlnaHQ6IDA7XG4gIH1cbiAgXG4gIC5leGFtcGxlLWlzLW1vYmlsZSAuZXhhbXBsZS10b29sYmFyIHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgLyogTWFrZSBzdXJlIHRoZSB0b29sYmFyIHdpbGwgc3RheSBvbiB0b3Agb2YgdGhlIGNvbnRlbnQgYXMgaXQgc2Nyb2xscyBwYXN0LiAqL1xuICAgIHotaW5kZXg6IDI7XG4gIH1cbiAgXG4gIGgxLmV4YW1wbGUtYXBwLW5hbWUge1xuICAgIG1hcmdpbi1sZWZ0OiA4cHg7XG4gIH1cbiAgXG4gIC5leGFtcGxlLXNpZGVuYXYtY29udGFpbmVyIHtcbiAgICAvKiBXaGVuIHRoZSBzaWRlbmF2IGlzIG5vdCBmaXhlZCwgc3RyZXRjaCB0aGUgc2lkZW5hdiBjb250YWluZXIgdG8gZmlsbCB0aGUgYXZhaWxhYmxlIHNwYWNlLiBUaGlzXG4gICAgICAgY2F1c2VzIGA8bWF0LXNpZGVuYXYtY29udGVudD5gIHRvIGFjdCBhcyBvdXIgc2Nyb2xsaW5nIGVsZW1lbnQgZm9yIGRlc2t0b3AgbGF5b3V0cy4gKi9cbiAgICBmbGV4OiAxO1xuICB9XG4gIFxuICAuZXhhbXBsZS1pcy1tb2JpbGUgLmV4YW1wbGUtc2lkZW5hdi1jb250YWluZXIge1xuICAgIC8qIFdoZW4gdGhlIHNpZGVuYXYgaXMgZml4ZWQsIGRvbid0IGNvbnN0cmFpbiB0aGUgaGVpZ2h0IG9mIHRoZSBzaWRlbmF2IGNvbnRhaW5lci4gVGhpcyBhbGxvd3MgdGhlXG4gICAgICAgYDxib2R5PmAgdG8gYmUgb3VyIHNjcm9sbGluZyBlbGVtZW50IGZvciBtb2JpbGUgbGF5b3V0cy4gKi9cbiAgICBmbGV4OiAxIDAgYXV0bztcbiAgfVxuXG4gIC5tZW51LWl0ZW0ge1xuICAgIHdpZHRoOiAxMDBlbTtcbiAgICBwYWRkaW5nLWxlZnQ6IDNlbTtcbn0iXX0= */\"","module.exports = \"<div class=\\\"example-container\\\" [class.example-is-mobile]=\\\"mobileQuery.matches\\\" *ngIf=\\\"shouldRun\\\">\\n  <mat-toolbar color=\\\"primary\\\" class=\\\"example-toolbar\\\">\\n    <button mat-icon-button (click)=\\\"snav.toggle()\\\">\\n      <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">menu</mat-icon>\\n    </button>\\n    <h1 class=\\\"example-app-name\\\" style=\\\"margin-left: 1em;\\\">Sistema de Avaliação</h1>\\n  </mat-toolbar>\\n\\n  <mat-sidenav-container class=\\\"example-sidenav-container\\\">\\n                          <!-- [style.marginTop.px]=\\\"mobileQuery.matches ? 56 : 0\\\"> -->\\n    <mat-sidenav #snav [mode]=\\\"side\\\"  [fixedInViewport]=\\\"mobileQuery.matches\\\" fixedTopGap=\\\"56\\\">\\n      <mat-nav-list>\\n        <a mat-list-item [routerLink]=\\\"['/login']\\\" (click)=\\\"snav.toggle()\\\" class=\\\"menu-item\\\" *ngIf=\\\"!logged\\\">\\n          <mat-icon aria-label=\\\"Login\\\" style=\\\"margin-right: 10%;\\\">people</mat-icon> Login\\n        </a>\\n        <a mat-list-item [routerLink]=\\\"['/home']\\\" (click)=\\\"snav.toggle()\\\" class=\\\"menu-item\\\">\\n          <mat-icon aria-label=\\\"Home\\\" style=\\\"margin-right: 10%;\\\">home</mat-icon> Home\\n        </a>\\n        <!-- <a mat-list-item [routerLink]=\\\"['/provas']\\\" (click)=\\\"snav.toggle()\\\" class=\\\"menu-item\\\" *ngIf=\\\"logged\\\"> -->\\n        <a mat-list-item [routerLink]=\\\"['/provas']\\\" (click)=\\\"snav.toggle()\\\" class=\\\"menu-item\\\">\\n          <mat-icon aria-label=\\\"Provas\\\" style=\\\"margin-right: 10%;\\\">ballot</mat-icon> Provas\\n        </a>\\n        <a mat-list-item [routerLink]=\\\"['/logout']\\\" (click)=\\\"snav.toggle()\\\" class=\\\"menu-item\\\" *ngIf=\\\"logged\\\">\\n          <mat-icon aria-label=\\\"Home\\\" style=\\\"margin-right: 10%;\\\">logout</mat-icon> LogOut\\n        </a>\\n      </mat-nav-list>\\n    </mat-sidenav>\\n    <mat-sidenav-content style=\\\"padding-left: 5%; padding-right: 5%;\\\">\\n      <router-outlet></router-outlet>\\n    </mat-sidenav-content>\\n  </mat-sidenav-container>\\n</div> \"","import { Component, ChangeDetectorRef, OnDestroy, OnInit, OnChanges } from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnChanges, OnDestroy {\n  mobileQuery: MediaQueryList;\n\n  private _mobileQueryListener: () => void;\n  shouldRun = true;\n  logged = false;\n\n  constructor(changeDetectorRef: ChangeDetectorRef, media: MediaMatcher) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnInit() {\n    this.logged = sessionStorage.getItem('logged')=='true'?true:false;\n  }\n\n  ngOnChanges() {\n    this.logged = sessionStorage.getItem('logged')=='true'?true:false;\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { HomeComponent, DialogOverviewExampleDialog } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ProvaComponent, MensagemComponent } from './components/prova/prova.component';\nimport { CadastroProvaComponent } from './components/cadastro/cadastro-provas.component';\nimport { ListagemProvaComponent } from './components/listagem-prova/listagem-prova.component';\nimport { RankingComponent } from './components/ranking/ranking.component';\n\nimport {\n  MaterialModule\n} from './material.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    ProvaComponent,\n    CadastroProvaComponent,\n    ListagemProvaComponent,\n    MensagemComponent,\n    RankingComponent,\n    DialogOverviewExampleDialog\n  ],\n  entryComponents: [\n    DialogOverviewExampleDialog,\n    MensagemComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    MaterialModule\n  ],\n  exports: [\n    MaterialModule\n  ],\n  providers: [],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"row\\\">\\n    <h2>Manutenção de provas</h2>\\n    <form class=\\\"\\\">\\n        <div class=\\\"row\\\">\\n            <mat-form-field [floatLabel]=\\\"auto\\\" style=\\\"width: 20%;\\\">\\n                <mat-label>Código</mat-label>\\n                <input matInput [(ngModel)]=\\\"prova.id\\\" name=\\\"codigoProva\\\" placeholder=\\\"Código da prova\\\">\\n            </mat-form-field>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <mat-form-field class=\\\"s6\\\" [floatLabel]=\\\"auto\\\" style=\\\"width: 50%;\\\">\\n                <mat-label>Nome</mat-label>\\n                <input matInput [(ngModel)]=\\\"prova.nomeDaProva\\\" name=\\\"nomeProva\\\" placeholder=\\\"Nome da prova\\\">\\n            </mat-form-field>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <button mat-stroked-button (click)=\\\"finalizarProva();\\\" color=\\\"primary\\\">Finalizar prova</button>\\n        </div>\\n        <mat-divider style=\\\"margin-top:1em; margin-bottom:1em;\\\"></mat-divider>\\n        <div class=\\\"row\\\">\\n            <mat-accordion>\\n                <mat-expansion-panel>\\n                    <mat-expansion-panel-header>\\n                        <mat-panel-title>\\n                            Adicionar perguntas\\n                        </mat-panel-title>\\n                        <mat-panel-description>\\n                            adicione questões e resposta à prova\\n                        </mat-panel-description>\\n                    </mat-expansion-panel-header>                \\n                    <div class=\\\"row\\\">\\n                        <h5>Questão</h5>\\n                        <mat-form-field style=\\\"width: 100%;\\\">\\n                            <textarea matInput [(ngModel)]=\\\"questao\\\" name=\\\"questao\\\" placeholder=\\\"Digite a questão\\\"></textarea>\\n                        </mat-form-field>\\n                    </div>\\n                    <div>\\n                        <h5>Respostas</h5>\\n                        <div class=\\\"row\\\">\\n                            <mat-form-field style=\\\"width: 40%;\\\">\\n                                <textarea matInput [(ngModel)]=\\\"resposta1\\\" name=\\\"resposta1\\\" placeholder=\\\"Resposta A\\\"></textarea>\\n                            </mat-form-field>\\n                            <mat-form-field style=\\\"width: 40%; margin-left:20%;\\\">\\n                                <textarea matInput [(ngModel)]=\\\"resposta2\\\" name=\\\"resposta2\\\" placeholder=\\\"Resposta B\\\"></textarea>\\n                            </mat-form-field>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <mat-form-field style=\\\"width: 40%;\\\">\\n                                <textarea matInput [(ngModel)]=\\\"resposta3\\\" name=\\\"resposta3\\\" placeholder=\\\"Resposta C\\\"></textarea>\\n                            </mat-form-field>\\n                            <mat-form-field style=\\\"width: 40%; margin-left:20%;\\\">\\n                                <textarea matInput [(ngModel)]=\\\"resposta4\\\" name=\\\"resposta4\\\" placeholder=\\\"Resposta D\\\"></textarea>\\n                            </mat-form-field>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <mat-form-field>\\n                                <mat-select [(ngModel)]=\\\"respostaCorreta\\\" name=\\\"respostaCorreta\\\" placeholder=\\\"Opção correta\\\">\\n                                    <mat-option value=\\\"1\\\">1</mat-option>\\n                                    <mat-option value=\\\"2\\\">2</mat-option>\\n                                    <mat-option value=\\\"3\\\">3</mat-option>\\n                                    <mat-option value=\\\"4\\\">4</mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                        </div>\\n                        <button mat-stroked-button (click)=\\\"adicionarQuestao();\\\" color=\\\"primary\\\">Adicionar questão</button>\\n                    </div>\\n                </mat-expansion-panel>\\n            </mat-accordion>\\n        </div>\\n    </form>\\n    <div class=\\\"row\\\" style=\\\"margin-bottom: 2em;\\\">\\n        <h5>Lista de questões</h5>\\n        <mat-accordion *ngFor=\\\"let questao of prova.questoes\\\">\\n        <mat-expansion-panel>\\n                <mat-expansion-panel-header>\\n                    <mat-panel-title>\\n                        Questão {{questao.id}}\\n                    </mat-panel-title>\\n                    <!-- <mat-panel-description>\\n                        adicione questões e resposta à prova\\n                    </mat-panel-description> -->\\n                </mat-expansion-panel-header>\\n                <div class=\\\"row\\\" *ngFor=\\\"let resposta of questao.respostas\\\">\\n                    <h4>Resposta {{resposta.id}}</h4>\\n                    <p>{{resposta.descricao}}</p>\\n                </div>\\n            </mat-expansion-panel>\\n        </mat-accordion>\\n    </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport { Prova } from '../../interfaces/prova-interface';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Questao } from 'src/app/interfaces/questao-interface';\nimport { Resposta } from 'src/app/interfaces/resposta-interface';\nimport { ProvaService } from 'src/app/services/prova.service';\nimport { MatAccordion } from '@angular/material';\n\n@Component({\n  selector: 'cadastro-prova-component',\n  templateUrl: './cadastro-prova.component.html'\n})\nexport class CadastroProvaComponent implements OnInit {\n\n  public prova: Prova = {id:Date.now(), nomeDaProva:'', questoes: Array()};\n  public param: number;\n\n  public question: Questao = {id:0, descricao:'', respostas:[]};\n  public questao: string;\n  public respostas: Resposta[] = [];\n  public resposta : Resposta;\n\n  public respostaCorreta : number;\n\n  public resposta1: string;\n  public resposta2: string;\n  public resposta3: string;\n  public resposta4: string;\n\n  constructor(\n    public activatedRoute: ActivatedRoute, \n    fb: FormBuilder,\n    public provaService: ProvaService, \n    public route: Router) {\n    this.activatedRoute.params.subscribe((param)=>{\n      this.param = param['id'];\n    });\n  }\n\n  ngOnInit() {\n\n  }\n\n  adicionarQuestao() : void {\n    if(\n      this.validarRespostas() &&\n      (this.questao != null && this.questao != undefined && this.questao != '')\n    ) {\n      this.respostas.push(\n        {\"id\": (this.respostas.length+1), \"correta\": (this.respostaCorreta==1?true:false), \"descricao\": this.resposta1},\n        {\"id\": (this.respostas.length+2), \"correta\": (this.respostaCorreta==2?true:false), \"descricao\": this.resposta2},\n        {\"id\": (this.respostas.length+3), \"correta\": (this.respostaCorreta==3?true:false), \"descricao\": this.resposta3},\n        {\"id\": (this.respostas.length+4), \"correta\": (this.respostaCorreta==4?true:false), \"descricao\": this.resposta4}\n      );\n      this.question.respostas = this.respostas;\n      this.question.id = this.prova.questoes.length+1;\n      this.question.descricao = this.questao;\n      this.prova.questoes.push(this.question);\n      this.limparProva();\n    } else {\n      alert('Respostas inválidas.');\n    }\n  }\n\n  finalizarProva() : void {\n    if(this.validarProva()) {\n      // this.provaService.saveProva(this.prova).subscribe\n      this.salvarProva();\n    } else {\n      alert('Prova inválida, verifique os dados.');\n    }\n  }\n\n  validarRespostas() : boolean {\n\n    if(\n      (this.resposta1 != '' && this.resposta1 != undefined) &&\n      (this.resposta2 != '' && this.resposta2 != undefined) &&\n      (this.resposta3 != '' && this.resposta3 != undefined) &&\n      (this.resposta4 != '' && this.resposta4 != undefined)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  validarProva() : boolean {\n\n    if(\n      (this.prova.id != null && this.prova.id > 0) &&\n      (this.prova.nomeDaProva != null && this.prova.nomeDaProva != '') &&\n      (this.prova.questoes.length > 0)\n    ) {\n      return true;\n    }\n\n    return false;\n\n  }\n\n  salvarProva() : boolean {\n    this.provaService\n      .saveProva(this.prova)\n      .subscribe(\n        (response)=>{\n          if(response != null) {\n            this.limparProva();\n            this.route.navigateByUrl('/home');\n          } else {\n            alert('Problemas ao salvar prova.');\n          }\n        },\n        (error)=>{\n          console.error(error);\n          console.log('Problemas ao salvar prova.');\n          alert('Problemas ao salvar prova.');\n        }\n      );\n    return false;\n  }\n\n  limparProva() : void {\n    this.questao = '';\n    this.question = {id:Date.now(), descricao: '', respostas: []};\n    this.resposta = {id: 0, descricao: '', correta: false};\n    this.respostas = [];\n    this.respostaCorreta = 0;\n    this.resposta1 = '';\n    this.resposta2 = '';\n    this.resposta3 = '';\n    this.resposta4 = '';\n  }\n\n}","module.exports = \"<h1 mat-dialog-title>Olá,</h1>\\n<div mat-dialog-content>\\n  <p>Qual o seu nome ?</p>\\n  <mat-form-field>\\n    <!-- <input matInput> -->\\n    <input matInput [(ngModel)]=\\\"aluno.nick\\\">\\n  </mat-form-field>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onNoClick()\\\">Cancelar</button>\\n  <button mat-button [mat-dialog-close]=\\\"aluno.nick\\\" cdkFocusInitial>Ok</button>\\n</div>\"","module.exports = \"<h1>Provas</h1>\\n<div class=\\\"row\\\">\\n    <mat-list>\\n        <mat-list-item *ngFor=\\\"let prova of provas\\\">\\n            <mat-icon mat-list-icon>task</mat-icon>\\n            <h4 mat-line>{{prova.nomeDaProva}}</h4>\\n            <p mat-line> Questões: {{prova.questoes.length}} </p>\\n            <button mat-fab color=\\\"primary\\\" (click)=\\\"openDialog(prova.id);\\\"><i class=\\\"material-icons\\\">play_arrow</i></button>\\n            <mat-divider></mat-divider>\\n        </mat-list-item>\\n    </mat-list>\\n</div>\\n\"","import { Component, Inject } from '@angular/core';\nimport { Prova } from '../../interfaces/prova-interface';\n// import { MatDialogRef } from '@angular/material';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Aluno } from 'src/app/interfaces/aluno-interface';\nimport { ProvaService } from 'src/app/services/prova.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'home-component',\n  templateUrl: './home.component.html'\n})\nexport class HomeComponent {\n\n    public provas: Prova[];\n    aluno: Aluno;\n\n    constructor(\n        public dialog: MatDialog,\n        public provaService: ProvaService, \n        public router: Router\n    ) {}\n    \n    ngOnInit() {\n        this.provaService\n            .getProvas()\n            .subscribe(\n                response=>{\n                    if(response.length) {\n                        this.provas = response;\n                    }\n                },\n                error=>{\n                    console.log(error);\n                    alert('problemas ao buscar provas.');\n                }\n            );\n    }\n\n    public openDialog(idProva: string): void {\n        const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n            width: '250px',\n            data: {nick: ''}\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            sessionStorage.setItem('nickName', result);\n            sessionStorage.setItem('prova', \n                JSON.stringify(\n                    this.provas.filter((prova)=>{\n                        return prova.id.toString() == idProva;\n                    })[0]\n                )\n            );\n\n            this.router.navigate(['/prova', idProva]);\n        });\n    }\n\n}\n\n@Component({\n    selector: 'dialog-overview-example-dialog',\n    templateUrl: 'dialog-component.html',\n})\n\nexport class DialogOverviewExampleDialog {\n\nconstructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n    @Inject(MAT_DIALOG_DATA) public aluno: Aluno) {}\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n}\n","module.exports = \"#itemProva :hover {\\n    background-color: dimgrey;\\n    cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9saXN0YWdlbS1wcm92YS9saXN0YWdlbS1wcm92YS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksMEJBQTBCO0lBQzFCLGdCQUFnQjtDQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGlzdGFnZW0tcHJvdmEvbGlzdGFnZW0tcHJvdmEuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNpdGVtUHJvdmEgOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkaW1ncmV5O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn0iXX0= */\"","module.exports = \"<div class=\\\"row\\\">\\n    <h2>Listagem de Provas</h2>\\n    <button mat-icon-button color=\\\"primary\\\" layout-align=\\\"rigth\\\" (click)=\\\"novaProva();\\\">\\n        <mat-icon aria-label=\\\"Trash\\\">add</mat-icon>\\n    </button>\\n    <mat-list id=\\\"itemProva\\\">\\n        <mat-list-item *ngFor=\\\"let prova of provas\\\" (click)=\\\"alterarProva(prova.id);\\\">\\n            <h4 mat-line>{{prova.nomeDaProva}}</h4>\\n            <p mat-line> Questões: {{prova.questoes.length}} </p>\\n            <mat-divider></mat-divider>\\n        </mat-list-item>\\n    </mat-list>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ProvaService } from 'src/app/services/prova.service';\nimport { Prova } from 'src/app/interfaces/prova-interface';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'listagem-prova',\n  templateUrl: './listagem-prova.component.html',\n  providers: [ ProvaService ],\n  styleUrls: ['./listagem-prova.component.css']\n})\n\nexport class ListagemProvaComponent implements OnInit {\n\n    provas: Array<Prova>;\n    constructor(public provaService: ProvaService, public router: Router){}\n\n    ngOnInit() {\n        this.provaService\n            .getProvas()\n            .subscribe(\n                response=>{\n                    if(response.length) {\n                        this.provas = response;\n                    }\n                },\n                error=>{\n                    console.log(error);\n                    alert('problemas ao buscar provas.');\n                }\n            );\n    }\n\n    alterarProva(id: number) : void {\n        if(id) {\n            // window.location.href = `/prova/${id}`\n            this.router.navigate(['/manutencaoprova', id]);\n        } else {\n            alert('Código de prova inválido.');\n        }\n    }\n\n    novaProva() : void {\n        this.router.navigateByUrl('/manutencaoprova');\n    }\n}\n","module.exports = \".example-card {\\n    max-width: 400px;\\n}\\n\\n.example-container {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.example-container > * {\\n    width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0NBQ3BCOztBQUVEO0lBQ0ksY0FBYztJQUNkLHVCQUF1QjtDQUMxQjs7QUFFRDtJQUNJLFlBQVk7Q0FDZiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNhcmQge1xuICAgIG1heC13aWR0aDogNDAwcHg7XG59XG5cbi5leGFtcGxlLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuICBcbi5leGFtcGxlLWNvbnRhaW5lciA+ICoge1xuICAgIHdpZHRoOiAxMDAlO1xufSJdfQ== */\"","module.exports = \"<div style=\\\"text-align: center; margin-top:5em;\\\" layout=\\\"row\\\" layout-align=\\\"center center\\\">\\n    <mat-card class=\\\"example-card center\\\" style=\\\"width: 100%; margin-left:30%;\\\">\\n        <mat-card-header>\\n            <mat-card-title style=\\\"text-align:center\\\">Login</mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content>\\n            <div class=\\\"example-container\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"CPF\\\" [(ngModel)]=\\\"cpf\\\">\\n                    <!-- <mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}}</mat-error> -->\\n                </mat-form-field>\\n            </div>\\n            <div class=\\\"example-container\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"Senha\\\" [type]=\\\"hide ? 'password' : 'text'\\\" [(ngModel)]=\\\"passwordUser\\\">\\n                    <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n                </mat-form-field>\\n            </div>\\n            <div class=\\\"example-container\\\">\\n                <button mat-stroked-button color=\\\"primary\\\" (click)=\\\"doLogin();\\\">Logar <mat-icon aria-label=\\\"Logar\\\" style=\\\"margin-left: 2%;\\\">send</mat-icon></button>\\n            </div>\\n        </mat-card-content>\\n    </mat-card>\\n</div>\"","import { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { UsuarioService } from '../../services/usuario.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'login-component',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  providers: [ UsuarioService ]\n})\nexport class LoginComponent {\n  \n  hide = true;\n  // email = new FormControl('', [Validators.required, Validators.email]);\n  cpf = '';\n  passwordUser = '';\n  \n  // constructor() {}\n  constructor(public usuarioService: UsuarioService, public router: Router) {}\n\n  doLogin() {\n    if((this.cpf.length>0) && this.passwordUser.length > 3) {\n      this.usuarioService\n        .realizarLogin(this.cpf, this.passwordUser)\n        .subscribe(\n          (response)=>{\n            sessionStorage.setItem('logged', 'true');\n            this.router.navigateByUrl('/home');\n          },\n          (error)=>{\n            console.log(error);\n            alert('Problemas ao realizar login');\n          }\n        );\n    }\n  }\n\n  // getErrorMessage() {\n  //   return this.email.hasError('required') ? 'Digite um e-mail' :\n  //       this.email.hasError('email') ? 'E-mail inválido' :\n  //           '';\n  // }\n\n}\n","module.exports = \"<h1 mat-dialog-title>{{data.titulo}}</h1>\\n<div mat-dialog-content>\\n  <p>{{data.mensagem}}</p>\\n  <!-- <mat-form-field>\\n    <input matInput [(ngModel)]=\\\"response\\\">\\n  </mat-form-field> -->\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"finalizar();\\\" cdkFocusInitial>Ok</button>\\n</div>\"","module.exports = \"<h1>Prova</h1>\\n<mat-divider style=\\\"margin-top:1em; margin-bottom:1em;\\\"></mat-divider>\\n<div class=\\\"row\\\">\\n    <div>\\n        <h4>Questão</h4>\\n        <p>{{questao.descricao}}</p>\\n    </div>\\n    <mat-divider style=\\\"padding-left:1em; padding-right:1em;\\\"></mat-divider>\\n    <div>\\n        <h4>Respostas</h4>\\n        <mat-selection-list #tabela>\\n            <mat-list-option *ngFor=\\\"let resp of questao.respostas\\\" value=\\\"{{resp.id}}\\\">\\n                {{resp.descricao}}\\n            </mat-list-option>\\n        </mat-selection-list>\\n    </div>\\n    <mat-divider style=\\\"margin-top:1em; margin-bottom:1em;\\\"></mat-divider>\\n    <div>\\n        <button mat-stroked-button (click)=\\\"proximaQuestao();\\\" color=\\\"primary\\\">{{buttonName}}</button>\\n    </div>\\n</div>\"","import { Component, OnInit, Input, ViewChild, Inject } from '@angular/core';\nimport { Prova } from '../../interfaces/prova-interface';\nimport { MatSelectionList, MatSelectionListChange, MatDialogRef, MAT_DIALOG_DATA, MatDialog } \nfrom '@angular/material';\nimport { Questao } from 'src/app/interfaces/questao-interface';\nimport { Resposta } from 'src/app/interfaces/resposta-interface';\nimport { Observable } from 'rxjs';\nimport { ProvaService } from 'src/app/services/prova.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'prova-component',\n  templateUrl: './prova.component.html'\n})\nexport class ProvaComponent implements OnInit {\n\n  @ViewChild(MatSelectionList) tabela: MatSelectionList;\n  // public tabela: MatSelectionList;\n\n  public nickName: string = '';\n  private prova: Prova;\n  private provaResposta;\n  private questao: Questao;\n  private resposta: Resposta;\n\n  public buttonName: string = 'Próxima questão';\n\n  private questaoAtual: number = 0;\n  private respostaSelecionada: number = 0;\n\n  private qtAcerto : number = 0;\n  private qtErros  : number = 0;\n\n  constructor(\n    public dialog: MatDialog,\n    public provaService: ProvaService,\n    public router: Router\n  ) {}\n\n  ngOnInit() {\n    this.recuperarProva();\n    this.popularQuestao();\n    this.tabela.selectionChange.subscribe((s:MatSelectionListChange)=>{\n      s.source.deselectAll();\n      s.option.selected = true;\n      this.respostaSelecionada = s.option.value;\n    });\n    this.provaResposta = this.prova;\n  }\n\n  recuperarProva() : void {\n    this.prova = JSON.parse(sessionStorage.getItem('prova'));\n    this.nickName = sessionStorage.getItem('nickName');\n  }\n\n  recuperarQuestao() : Questao {\n    return this.prova.questoes[this.questaoAtual];\n  }\n\n  popularQuestao() : void {\n    this.questao = this.recuperarQuestao();\n  }\n\n  proximaQuestao() : void {\n    // pular para a próxima questão e verificar se o usuário acertou ou não\n    this.responderQuestao();\n    this.limparQuestoes();\n    this.questaoAtual++;\n    if(this.questaoAtual <= this.prova.questoes.length-1) {\n      // mostrar se acertou ou não e ir para a próxima questão\n      this.popularQuestao();\n      if(this.questaoAtual == this.prova.questoes.length-1)\n        this.buttonName = 'Finalizar prova';\n    } else {\n      // não existem mais perguntas\n      // exibir a totalização de acertos e depois exibir o ranking.\n      this.finalizarProva();\n    }\n\n  }\n\n  responderQuestao() {\n\n    let arr = this.provaResposta\n      .questoes[this.questaoAtual]\n      .respostas.filter((resp)=>{\n        return resp.id == this.respostaSelecionada;\n      });\n    \n    this.provaResposta.questoes[this.questaoAtual].respostas = arr;\n  }\n\n  corrigirQuestao(resposta: number, callback)  {\n    let resp = false;\n    this.prova\n      .questoes[this.questaoAtual]\n      .respostas\n      .forEach((el, index)=>{\n        if(resposta == el.id && el.correta) {\n          resp = true;\n        }\n      });\n\n    (resp)?this.qtAcerto++:this.qtErros++;\n\n    this.openDialog(\n      'Correção',\n      this.montarMensagem(resp),\n      resp, \n      callback()\n    );\n\n  }\n\n  montarMensagem(acerto: boolean) : string {\n    if(acerto) {\n      return 'Parabéns, você acertou a questão.'\n    } else {\n      return 'Que pena, você errou a questão.';\n    }\n  }\n\n  openDialog(\n    titulo    : string, \n    mensagem  : string,\n    response  : boolean, \n    after     ): void {\n    const dialogRef = this.dialog.open(\n      MensagemComponent, {\n        width: '250px',\n        data: {\n          titulo: titulo,\n          mensagem: mensagem,\n          response: response\n        }\n      }\n    );\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n\n  totalizarRespostas() {\n    this.openDialog(\n      'Totalização', \n      this.montarMensagemTotaliacao(),\n      false,\n      ()=>{return;}\n    );\n  }\n\n  montarMensagemTotaliacao() : string {\n    return `Você finalizou a prova, acertou ${this.qtAcerto} questões e errou ${this.qtErros}.`;\n  }\n\n  limparQuestoes() {\n    this.tabela.deselectAll();\n    this.respostaSelecionada = 0;\n  }\n\n  finalizarProva() {\n\n    this.provaResposta.nick = this.nickName;\n    this.provaResposta._id = {};\n    this\n      .provaService\n      .saveUserTest(this.provaResposta).subscribe(\n        (result)=>{\n          // redirecionar para ranking\n          this.router.navigateByUrl('/ranking');\n        },\n        (error: HttpErrorResponse)=>{\n          this.openDialog(\n            'Erros',\n            'Problemas ao finalizar a avaliação.',\n            false,\n            ()=>{}\n          );\n          console.log(error.message);\n        }\n      );\n  }\n\n}\n\n@Component({\n  selector: 'mensagem-component',\n  templateUrl: 'mensagem.component.html',\n})\n\nexport class MensagemComponent {\n\nconstructor(\n  public dialogRef: MatDialogRef<MensagemComponent>,\n  @Inject(MAT_DIALOG_DATA) \n    public data: Mensagem\n  ) {}\n\n  finalizar() : void {\n    this.dialogRef.close();\n  }\n\n}\n\nexport interface Mensagem {\n  titulo: string;\n  mensagem: string;\n  response: boolean;\n}","module.exports = \"<h1>Ranking</h1>\\n<mat-divider style=\\\"margin-top:1em; margin-bottom:1em;\\\"></mat-divider>\\n<div class=\\\"row\\\">\\n    <div *ngFor=\\\"let comp of competidores\\\">\\n        <p>{{comp.aluno}} - {{comp.acertos}} acertos</p>\\n    </div>\\n    <mat-divider style=\\\"margin-top:1em; margin-bottom:1em;\\\"></mat-divider>\\n    <div>\\n        <button mat-stroked-button (click)=\\\"goHome();\\\" color=\\\"primary\\\">Página inicial</button>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Ranking } from 'src/app/interfaces/ranking-interface';\nimport { RankingService } from 'src/app/services/ranking.service';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'ranking-component',\n  templateUrl: './ranking.component.html',\n\n})\nexport class RankingComponent implements OnInit {\n\n    public competidores : Ranking[];\n\n    constructor(\n        public rankingService: RankingService,\n        public router: Router\n    ) {}\n\n    ngOnInit() {\n        this.rankingService\n            .getRanking()\n            .subscribe(\n                (result)=>{\n                    this.competidores = result;\n                    console.log(this.competidores);\n                },\n                (error: HttpErrorResponse)=>{\n                    console.log(error.message);\n                    alert('Problemas ao buscar Ranking.');\n                }\n            );\n    }\n\n    goHome() {\n        this.router.navigateByUrl('/home');\n    }\n\n}","import { NgModule } from '@angular/core';\nimport { MatToolbar,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n    MatPaginatorModule,\n    MatTableDataSource,\n    MatTableModule,\n    MatCardModule,\n    MatSelectModule,\n    MatDialogModule } from '@angular/material';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\n\n@NgModule({\n  declarations: [\n\n  ],\n  imports: [\n      MatToolbarModule,\n      MatSidenavModule,\n      MatIconModule,\n      MatListModule,\n      MatButtonModule,\n      MatDividerModule,\n      MatFormFieldModule,\n      MatInputModule,\n      MatSnackBarModule,\n      MatExpansionModule,\n      MatPaginatorModule,\n      MatTableModule,\n      MatCardModule,\n      MatFormFieldModule,\n      MatSelectModule,\n      MatDialogModule\n  ],\n  exports: [\n      MatToolbarModule,\n      MatSidenavModule,\n      MatIconModule,\n      MatListModule,\n      MatButtonModule,\n      MatDividerModule,\n      MatFormFieldModule,\n      MatInputModule,\n      MatSnackBarModule,\n      MatExpansionModule,\n      MatPaginatorModule,\n      MatCardModule,\n      MatTableModule,\n      MatFormFieldModule,\n      MatSelectModule,\n      MatDialogModule\n  ]\n})\nexport class MaterialModule {}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Prova } from '../interfaces/prova-interface';\nimport { Avaliacao } from '../interfaces/avaliacao-interface';\n\n@Injectable({\n    providedIn: 'root',\n  })\nexport class ProvaService {\n\n    private _url : string = \"https://cloud-gasapi.herokuapp.com/listarProvasCadastradas\";\n\n    header: Headers;\n\n    constructor(private _http: Http) {\n        this.header = new Headers();\n        this.header.append('Content-Type', 'application/json');\n        this.header.append('Accept', 'application/json');\n        this.header.append('Access-Control-Allow-Origin', '*');\n    }\n\n    public getProvas(): Observable<Array<Prova>> {\n        return this._http\n            .get(this._url, {headers:this.header})\n            .pipe(map(response=>{return response.json()}));\n    }\n\n    public saveProva(prova: Prova): Observable<any> {\n        return this\n            ._http\n            .post('https://cloud-gasapi.herokuapp.com/cadastrarProva', prova, {headers:this.header});\n    }\n\n    public saveUserTest(prova: any) : Observable<any> {\n        console.log(JSON.stringify(prova));\n        return this\n            ._http\n            .post(\n                'https://cloud-gasapi.herokuapp.com/responderProva', \n                prova, \n                {headers:this.header}\n            );\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Ranking } from '../interfaces/ranking-interface';\n\n\n@Injectable({\n    providedIn: 'root',\n  })\n\nexport class RankingService {\n\n    private _url : string = \"https://cloud-gasapi.herokuapp.com/listarPorScore\";\n\n    header: Headers;\n\n    constructor(private _http: Http) {\n        this.header = new Headers();\n        this.header.append('Content-Type', 'application/json');\n        this.header.append('Accept', 'application/json');\n        this.header.append('Access-Control-Allow-Origin', '*');\n    }\n\n    public getRanking(): Observable<Array<Ranking>> {\n        return this._http\n            .get(this._url, {headers:this.header})\n            .pipe(map(response=>{return response.json()}));\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { Http, Headers, Response, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class UsuarioService {\n\n    // private _url : string = \"http://localhost:3000/login\";\n    constructor(private _http: Http) { }\n\n    public realizarLogin(cpf: string, password: string): Observable<any> {\n        return this._http\n            .get(`https://cloud-gasapi.herokuapp.com/validarUsuario?cpf=${cpf}&senha=${password}`)\n            .pipe(map(response=>{return response.json()}));\n    }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}